Description: Use XDG_DATA_DIR for eeproms and roms
 Patch already in upstream git as
 c3254eecf4ad7be7d10cde6a0b803c09de883914
Author: Teemu Hukkanen <tjhukkan@iki.fi>
Forwarded: yes

--- a/docs/virtualjaguar.1
+++ b/docs/virtualjaguar.1
@@ -127,13 +127,13 @@
 Virtualjaguar log file. If the file cannot be opened, the log it sent
 to standard output instead. The log file is overwritten on startup.
 .TP
-.B ~/virtualjaguar/eeproms/
+.B ${XDG_DATA_HOME}/virtualjaguar/eeproms/ (typically ~/.local/share/data/virtualjaguar/eeproms/)
 Some Atari Jaguar cartridges feature a small writable EEPROM, used for
 saving game state and score lists. If this directory exists,
 virtualjaguar will emulate the EEPROM by saving the state in file in
 this directory.
 .TP
-.B ~/virtualjaguar/software/
+.B ${XDG_DATA_HOME}/virtualjaguar/software/ (typically ~/.local/share/data/virtualjaguar/software/)
 The virtualjaguar GUI for loading software scans this directory, and
 shows the loadable files, along with information about the program,
 and a label image if one is included in a zip archive of the software.
--- a/src/gui/mainwin.cpp
+++ b/src/gui/mainwin.cpp
@@ -989,8 +989,8 @@
 	vjs.allowWritesToROM = settings.value("writeROM", false).toBool();
 //	strcpy(vjs.jagBootPath, settings.value("JagBootROM", "./bios/[BIOS] Atari Jaguar (USA, Europe).zip").toString().toAscii().data());
 //	strcpy(vjs.CDBootPath, settings.value("CDBootROM", "./bios/jagcd.rom").toString().toAscii().data());
-	strcpy(vjs.EEPROMPath, settings.value("EEPROMs", "./eeproms/").toString().toAscii().data());
-	strcpy(vjs.ROMPath, settings.value("ROMs", "./software/").toString().toAscii().data());
+    strcpy(vjs.EEPROMPath, settings.value("EEPROMs", QDesktopServices::storageLocation(QDesktopServices::DataLocation).append("/eeproms/")).toString().toAscii().data());
+    strcpy(vjs.ROMPath, settings.value("ROMs", QDesktopServices::storageLocation(QDesktopServices::DataLocation).append("/software/")).toString().toAscii().data());
 	strcpy(vjs.alpineROMPath, settings.value("DefaultROM", "").toString().toAscii().data());
 	strcpy(vjs.absROMPath, settings.value("DefaultABS", "").toString().toAscii().data());
 WriteLog("MainWin: Paths\n");
